{"version":3,"sources":["webpack:///./js/task-1.js","webpack:///./js/task-2.js","webpack:///./js/task-3.js","webpack:///./index.js"],"names":["setTimeout","console","log","delay","ms","Promise","resolve","logger","time","then","users","name","active","toggleUserState","allUsers","userName","reject","map","user","updatedUsers","table","makeTransaction","transaction","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"uJACAA,YAAW,WACPC,QAAQC,IAAI,gBACX,KAGL,IAAMC,EAAQ,SAAAC,GACd,OAAO,IAAIC,SAAS,SAAAC,GAClBN,YAAW,WACTM,EAAQF,KACPA,OAKGG,EAAS,SAAAC,GAAI,OAAIP,QAAQC,IAAR,kBAA8BM,EAA9B,OAGvBL,EAAM,KAAMM,KAAKF,GACjBJ,EAAM,KAAMM,KAAKF,GACjBJ,EAAM,MAAMM,KAAKF,G,8BCnBnBP,YAAW,WACTC,QAAQC,IAAI,gBACX,IAEH,IAAMQ,EAAQ,CACV,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,OAAO,IAAIV,SAAS,SAACC,EAASU,GAC1BV,EAAQQ,EAASG,KAAI,SAAAC,GAAI,OACrBA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,UAIjEX,EAAS,SAAAY,GAAY,OAAIlB,QAAQmB,MAAMD,IAG7CN,EAAgBH,EAAO,SAASD,KAAKF,GACrCM,EAAgBH,EAAO,OAAOD,KAAKF,GCvBrCN,QAAQC,IAAI,cAEV,IAIMmB,EAAkB,SAACC,GAGvB,OAAO,IAAIjB,SAAQ,SAACC,EAASU,GACzB,IAR6BO,EAAKC,EAQ5BrB,GARuBoB,EAQW,IARNC,EAQW,IAP1CC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAQhDvB,YAAW,WACYyB,KAAKE,SAAW,GAE9BrB,EAAQ,CAACgB,EAAYM,GAAIzB,IAEzBa,EAAOM,EAAYM,MAEvBzB,OAML0B,EAAa,SAAC,GAAe,IAAdD,EAAc,KAAVpB,EAAU,KACjCP,QAAQC,IAAR,eAA2B0B,EAA3B,iBAA8CpB,EAA9C,OAGIsB,EAAW,SAAAF,GACf3B,QAAQ8B,KAAR,gCAA6CH,EAA7C,8BAGFP,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,KAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GC1CX7B,QAAQC,IAAI,W","file":"main.c9ee82b0d5d0c6ff5f22.js","sourcesContent":["\r\nsetTimeout(() => {\r\n    console.log('Завдання-1')\r\n  }, 900);\r\n\r\n\r\nconst delay = ms => {\r\nreturn new Promise (resolve=> {\r\n  setTimeout(() => {\r\n    resolve(ms);\r\n  }, ms);\r\n    \r\n})\r\n  };\r\n  \r\n  const logger = time => console.log(`Resolved after ${time}ms`);\r\n  \r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n","\r\nsetTimeout(() => {\r\n  console.log('Завдання-2')\r\n}, 10);\r\n\r\nconst users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n  \r\n  const toggleUserState = (allUsers, userName) => {\r\n    return new Promise ((resolve, reject) => {\r\n        resolve(allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user,))\r\n    })\r\n  };\r\n  \r\n  const logger = updatedUsers => console.table(updatedUsers);\r\n  \r\n\r\n  toggleUserState(users, 'Mango').then(logger);\r\n  toggleUserState(users, 'Lux').then(logger);","console.log('Завдання-3')\r\n\r\n  const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  const makeTransaction = (transaction) => {\r\n\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        const delay = randomIntegerFromInterval(200, 500);\r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n               if (canProcess) {\r\n                 resolve([transaction.id, delay]);\r\n                 } else {\r\n                 reject(transaction.id);\r\n                }\r\n          }, delay);\r\n        \r\n    })\r\n\r\n  };\r\n  \r\n  const logSuccess = ([id, time]) => {\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n  };\r\n  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);","import './styles.css';\r\nimport './js/task-1';\r\nimport './js/task-2';\r\nimport './js/task-3';\r\nconsole.log('hello')\r\n"],"sourceRoot":""}